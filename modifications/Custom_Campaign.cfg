#textdomain wesnoth-Custom_Campaign

[modification]
    id="Custom Campaign"
    name=_ "Custom Campaign"
    description=_ "This modification allows saving your faction and units on victory so they can be used in future scenarios. When you load a saved faction, it replaces a side's existing faction and units." + "

" + _ "Will work with almost any era, mp scenario / random map, and should work with most modifications. May or may not work with mp campaigns, though it is guaranteed to work with Random Campaign." + "

" + _ "Running the '1p - Custom Campaign' scenario with this modification allows making changes to your saved factions." + "

" + _ "Minimum Wesnoth version required:" + " " + "{~add-ons/Custom_Campaign/dist/min_wesnoth_version}" + "

" + _ "Version:" + " " + "{~add-ons/Custom_Campaign/dist/version}" + "
" + _ "Author:" + " " + "SigurdFireDragon."

    type=mp
    require_modification=yes
    addon_min_version="{~add-ons/Custom_Campaign/dist/version}"

    # all mainline enables plus EoL Orcish High Warlord
    {ENABLE_PARAGON}
    {ENABLE_ARMAGEDDON_DRAKE}
    {ENABLE_DWARVISH_ARCANISTER}
    {ENABLE_DWARVISH_RUNESMITH}
    {ENABLE_WOLF_ADVANCEMENT}
    {ENABLE_TROLL_SHAMAN}
    {ENABLE_ANCIENT_LICH}
    {ENABLE_DEATH_KNIGHT}
    {ENABLE_WOSE_SHAMAN}
#ifhave ~add-ons/Era_of_Legends/_main.cfg
    [load_resource]
        id=Era of Legends
    [/load_resource]
    [modify_unit_type]
        type="Orcish Warlord"
        add_advancement="EoL Orcish High Warlord"
        set_experience=180
    [/modify_unit_type]
#endif

    # load custom tags
    [event]
        name=preload
        first_time_only=no

        [lua]
            code=<< wesnoth.require "~add-ons/Custom_Campaign/lua/wml-tags.lua" >>
        [/lua]
    [/event]

    # create or load a saved faction
    [event]
        name=prestart

        # present faction selection menu to all non-empty sides & save relevant data for all sides to custom_campaign array
        [store_side]
        [/store_side]
        [foreach]
            array=side
            variable=this_side
            index_var=s
            [do]
                [if]
                    {VARIABLE_CONDITIONAL this_side.controller equals "null"}
                    # mark the side to be ignored
                    [then]
                        {VARIABLE custom_campaign[$s].id -1}
                        {VARIABLE custom_campaign[$s].side $this_side.side}
                    [/then]
                    # allow the owner of the side to decide what to do with it
                    [else]
                        # load saved factions
                        {VARIABLE_FROM_GLOBAL SigurdFireDragon_Custom_Campaign faction         faction       $this_side.side}
                        # assemble an array to make message options out of
                        [foreach]
                            array=faction
                            variable=this_faction
                            index_var=f
                            [do]
                                [if]
                                    # see if unit type of leader is valid
                                    [lua]
                                        [args]
                                            utype=$this_faction.unit.type
                                        [/args]
                                        code=<< local args = ... ; return wesnoth.unit_types[args.utype] >>
                                    [/lua]
                                    [then]
                                        {VARIABLE image "$this_faction.unit.image~RC(magenta>$this_side.color)"}
                                    [/then]
                                    [else]
                                        {VARIABLE image "units/unknown-unit.png~RC(magenta>$this_side.color)"}
                                    [/else]
                                [/if]
                                [set_variables]
                                    name=faction_option
                                    mode=append
                                    [value]
                                        image=$image
                                        label=$this_faction.name + " - " + $this_faction.era_name + " (" + $this_faction.era_id + ")"
                                        description=$this_faction.last_update
                                        [command]
                                            {VARIABLE index $f}
                                        [/command]
                                    [/value]
                                [/set_variables]
                                {CLEAR_VARIABLE image}
                            [/do]
                        [/foreach]
                        # present menu to pick from
                        # fetch name & id of active era
                        [lua]
                            code=<<
                                wml.variables["active_era_name"] = wesnoth.scenario.era.name
                                wml.variables["active_era_id"] = wesnoth.scenario.era.id
                            >>
                        [/lua]
                        [message]
                            speaker=narrator
                            image=none
                            message=_ "Active Era: " + $active_era_name + " (" + $active_era_id + ")" + "
(Loading a faction from an era other than the active era may result in errors.)
Select faction for side $this_side.side / controller $this_side.controller / gold $this_side.gold / income $this_side.base_income:"
                            side_for=$this_side.side
                            # wait_description=Not needed, the 'Waiting for Global Variable from side x' is sufficient
                            [option]
                                default=yes
                                image="wesnoth-icon.png~SCALE(72,72)"
                                label=_ "Quit to Titlescreen"
                                description=""
                                [show_if]
                                    [cc_current_scenario_is]
                                        scenario=Custom_Campaign_Scenario
                                    [/cc_current_scenario_is]
                                [/show_if]
                                [command]
                                    {VARIABLE index -3}
                                [/command]
                            [/option]
                            [option]
                                default=yes
                                image="misc/blank-hex.png~RC(magenta>$this_side.color)"
                                label=_ "Keep Side As Is"
                                description=""
                                [show_if]
                                    [not]
                                        [cc_current_scenario_is]
                                            scenario=Custom_Campaign_Scenario
                                        [/cc_current_scenario_is]
                                    [/not]
                                [/show_if]
                                [command]
                                    {VARIABLE index -2}
                                [/command]
                            [/option]
                            [option]
                                image="units/unknown-unit.png~RC(magenta>$this_side.color)" #units/random-dice.png
                                label=_ "New Saved Faction From Side"
                                description=""
                                [command]
                                    {VARIABLE index -1}
                                [/command]
                            [/option]
                            [insert_tag]
                                name=option
                                variable=faction_option
                            [/insert_tag]
                        [/message]
                        {CLEAR_VARIABLE active_era_name,active_era_id,faction_option}
                        # process side based on owner's choice
                        [switch]
                            variable=index
                            # quit from Custom Campaign Scenario
                            [case]
                                value=-3
                                [endlevel]
                                    result=defeat
                                    carryover_report=no
                                    linger_mode=no
                                    replay_save=no
                                [/endlevel]
                            [/case]
                            # mark the side to be ignored
                            [case]
                                value=-2
                                {VARIABLE custom_campaign[$s].id -1}
                                {VARIABLE custom_campaign[$s].side "$this_side.side"}
                            [/case]
                            # make a new saved faction from the side
                            [case]
                                value=-1
                                {VARIABLE_FROM_GLOBAL SigurdFireDragon_Custom_Campaign id_counter      id_counter    $this_side.side}
                                {VARIABLE_OP id_counter add 1}
                                {VARIABLE custom_campaign[$s].id "$id_counter"}
                                {VARIABLE custom_campaign[$s].side "$this_side.side"}
                                # don't need to make write immediate, it is smart enough to do pending writes before next read
                                {GLOBAL_VARIABLE SigurdFireDragon_Custom_Campaign id_counter      id_counter    $this_side.side}
                                {CLEAR_VARIABLE id_counter}
                                # name the faction
                                [lua]
                                    [args]
                                        name=custom_campaign[$s].name
                                        era_name=custom_campaign[$s].era_name
                                        era_id=custom_campaign[$s].era_id
                                        side=$this_side.side
                                    [/args]
                                    code=<<
                                        local args = ...
                                        wml.variables[args.name] = wesnoth.sides[args.side].faction_name
                                        wml.variables[args.era_name] = wesnoth.scenario.era.name
                                        wml.variables[args.era_id] = wesnoth.scenario.era.id
                                    >>
                                [/lua]
                                # set commander role for all canrecruit=yes on the side, typically only one unit
                                [modify_unit]
                                    [filter]
                                        side=$this_side.side
                                        [and]
                                            canrecruit=yes
                                        [/and]
                                    [/filter]
                                    [variables]
                                        cc_role=commander
                                    [/variables]
                                [/modify_unit]
                            [/case]
                            # Unpack the selected saved faction to the side
                            [else]
                                # clear existing relevant side attributes to prevent conflicts
                                [kill]
                                    side=$this_side.side
                                    animate=no
                                    fire_event=no
                                [/kill]
                                [set_recruit]
                                    recruit=""
                                    side=$this_side.side
                                [/set_recruit]
                                [modify_ai]
                                    side=$this_side.side
                                    action=delete
                                    path=aspect[recruitment_pattern].facet[*]
                                [/modify_ai]
                                # set the flag & recruitment_pattern for the side
                                [modify_side]
                                    side=$this_side.side
                                    flag=$faction[$index].flag
                                    flag_icon=$faction[$index].flag_icon
                                    [ai]
                                        recruitment_pattern=$faction[$index].recruitment_pattern
                                    [/ai]
                                [/modify_side]
                                # verify all unit types in recruit and unpack the valid ones
                                [set_variables]
                                    name=recruit
                                    [split]
                                        list=$faction[$index].recruit
                                        key=type
                                        separator=,
                                        remove_empty=yes
                                    [/split]
                                [/set_variables]
                                [foreach]
                                    array=recruit
                                    variable=this_recruit
                                    index_var=r
                                    [do]
                                        [if]
                                            [cc_unit_type_is_valid]
                                                type=$this_recruit.type
                                            [/cc_unit_type_is_valid]
                                            [then]
                                                [allow_recruit]
                                                    type=$this_recruit.type
                                                    side=$this_side.side
                                                [/allow_recruit]
                                            [/then]
                                            [else]
                                                [chat]
                                                    speaker="Custom Campaign"
                                                    message=_"Unable to load $this_recruit.type - unit type for recruit is invalid"
                                                [/chat]
                                            [/else]
                                        [/if]
                                    [/do]
                                [/foreach]
                                {CLEAR_VARIABLE recruit}
                                # verify all units and unpack valid ones
                                [store_starting_location]
                                    side=$this_side.side
                                [/store_starting_location]
                                [foreach]
                                    array=faction[$index].unit
                                    variable=this_unit
                                    index_var=u
                                    [do]
                                        [if]
                                            [cc_unit_type_is_valid]
                                                type=$this_unit.type
                                            [/cc_unit_type_is_valid]
                                            [then]
                                                # verify all unit types in unit extra_recruit, remove invalid ones
                                                [set_variables]
                                                    name=recruit
                                                    [split]
                                                        list=$this_unit.extra_recruit
                                                        key=type
                                                        separator=,
                                                        remove_empty=yes
                                                    [/split]
                                                [/set_variables]
                                                [for]
                                                    array=recruit
                                                    reverse=yes
                                                    variable=r
                                                    [do]
                                                        [if]
                                                            [not]
                                                                [cc_unit_type_is_valid]
                                                                    type=$recruit[$r].type
                                                                [/cc_unit_type_is_valid]
                                                            [/not]
                                                            [then]
                                                                [chat]
                                                                    speaker="Custom Campaign"
                                                                    message=_ "Unable to load $recruit[$r].type - unit type for $this_unit.type extra recruit is invalid"
                                                                [/chat]
                                                                {CLEAR_VARIABLE recruit[$r]}
                                                            [/then]
                                                        [/if]
                                                    [/do]
                                                [/for]
                                                [set_variable]
                                                    name=this_unit.extra_recruit
                                                    [join]
                                                        variable=recruit
                                                        key=type
                                                        separator=,
                                                        remove_empty=yes
                                                    [/join]
                                                [/set_variable]
                                                {CLEAR_VARIABLE recruit}
                                                # scale the unit's experience & max_experience based on current experience modifier
                                                [cc_scale_unit_experience]
                                                    name=this_unit
                                                [/cc_scale_unit_experience]
                                                # place unit on map or recall
                                                {VARIABLE this_unit.side $this_side.side}
                                                [switch]
                                                    variable=this_unit.variables.cc_role
                                                    [case]
                                                        value=commander,lieutenant,hero
                                                        [unstore_unit]
                                                            variable=this_unit
                                                            x,y=$location.x,$location.y
                                                            find_vacant=yes
                                                        [/unstore_unit]
                                                    [/case]
                                                    [else]
                                                        [unstore_unit]
                                                            variable=this_unit
                                                            x,y=recall,recall
                                                        [/unstore_unit]
                                                    [/else]
                                                [/switch]
                                            [/then]
                                            [else]
                                                [chat]
                                                    speaker="Custom Campaign"
                                                    message=_ "Unable to load $this_unit.type - unit type for recall is invalid"
                                                [/chat]
                                            [/else]
                                        [/if]
                                    [/do]
                                [/foreach]
                                {CLEAR_VARIABLE location}
                                # save important info so faction can be saved on victory
                                [set_variables]
                                    name=custom_campaign[$s]
                                    mode=merge
                                    [value]
                                        id=$faction[$index].id
                                        side=$this_side.side
                                        name=$faction[$index].name
                                        era_name=$faction[$index].era_name
                                        era_id=$faction[$index].era_id
                                        last_update=$faction[$index].last_update
                                        freeze=$faction[$index].freeze
                                    [/value]
                                [/set_variables]
                            [/else]
                        [/switch]
                        {CLEAR_VARIABLE index,faction}
                    [/else]
                [/if]
            [/do]
        [/foreach]
        {CLEAR_VARIABLE side}
    [/event]

    # save victorious factions to persistent file
    # this add-on works like a campaign, only save on victory. time over, unless other code modifies it, results in defeat.
    [event]
        name=victory

        # go through each side and decide what to do with it based on the side and scenario results
        [foreach]
            array=custom_campaign
            variable=this_side
            index_var=s
            [do]
                [store_side]
                    side=$this_side.side
                [/store_side]
                [if]
                    {VARIABLE_CONDITIONAL this_side.id greater_than 0}
                    {VARIABLE_CONDITIONAL this_side.freeze not_equals yes}
                    # mark as victorious all sides that are not defeated that are intended to be saved
                    [then]
                        [switch]
                            variable=side.controller
                            [case]
                                value=human,ai
                                [switch]
                                    # evaluate the side based on its defeat_condition
                                    variable=side.defeat_condition
                                    [case]
                                        value=never
                                        # this path used by custom campaign scenario to allow editing
                                        {VARIABLE this_side.victory yes}
                                    [/case]
                                    [case]
                                        value=always
                                        # do nothing
                                    [/case]
                                    [case]
                                        value=no_leader_left
                                        [if]
                                            [have_unit]
                                                side=$side.side
                                                [and]
                                                    canrecruit=yes
                                                [/and]
                                            [/have_unit]
                                            [then]
                                                {VARIABLE this_side.victory yes}
                                            [/then]
                                        [/if]
                                    [/case]
                                    [case]
                                        value=no_units_left
                                        [if]
                                            [have_unit]
                                                side=$side.side
                                            [/have_unit]
                                            [then]
                                                {VARIABLE this_side.victory yes}
                                            [/then]
                                        [/if]
                                    [/case]
                                [/switch]
                            [/case]
                        [/switch]
                    [/then]
                [/if]
                # save all victorious sides to their owner's persistent data
                [if]
                    {VARIABLE_CONDITIONAL this_side.victory equals yes}
                    [then]
                        # get global var
                        {VARIABLE_FROM_GLOBAL SigurdFireDragon_Custom_Campaign faction         faction       $this_side.side}
                        # find location to store in by id. if not found, it will be put at the end of the array
                        {LOOKUP_INDEX faction id $this_side.id index}
                        # update faction attributes, freeze handled later on
                        {LOOKUP_INDEX side.ai.aspect id recruitment_pattern rp}
                        [set_variables]
                            name=faction[$index]
                            mode=merge
                            [value]
                                id=$this_side.id
                                name=$this_side.name
                                era_name=$this_side.era_name
                                era_id=$this_side.era_id
                                recruit=$side.recruit
                                recruitment_pattern=$side.ai.aspect[$rp].facet.value
                                flag=$side.flag
                                flag_icon=$side.flag_icon
                            [/value]
                        [/set_variables]
                        {CLEAR_VARIABLE rp}
                        # Only update time if we're not in Setup Scenario, so player can see when they last used faction successfully
                        [if]
                            [not]
                                [cc_current_scenario_is]
                                    scenario=Custom_Campaign_Scenario
                                [/cc_current_scenario_is]
                            [/not]
                            [then]
                                [cc_store_time]
                                [/cc_store_time]
                                {VARIABLE faction[$index].last_update $time }
                                {CLEAR_VARIABLE time}
                            [/then]
                        [/if]
                        # update the faction unit list
                        {CLEAR_VARIABLE faction[$index].unit}
                        [store_unit]
                            variable=faction[$index].unit
                            kill=no
                            [filter]
                                side=$this_side.side
                            [/filter]
                        [/store_unit]
                        # Restore the units as in end of scenario, and clear attributes that possibly/will cause conflicts
                        # Must do it this way, as this storing of units occurs before the victory restoring.
                        [foreach]
                            array=faction[$index].unit
                            variable=this_unit
                            [do]
                                # id & underlying_id must be cleared to prevent unpacking conflicts
                                [set_variables]
                                    name=this_unit
                                    mode=merge
                                    [value]
                                        id=""
                                        underlying_id=""
                                        hitpoints=$this_unit.max_hitpoints
                                        moves=$this_unit.max_moves
                                        attacks_left=$this_unit.max_attacks
                                        goto_x,goto_y=0,0
                                        x,y="",""
                                        facing=""
                                        side=""
                                    [/value]
                                [/set_variables]
                                {CLEAR_VARIABLE this_unit.status}
                            [/do]
                        [/foreach]
                        # sort units by cc_role (commander,lieutenant,reserve,hero,loyal,none) so they will be unpacked in that order
                        [cc_special_unit_sort]
                            name=faction[$index].unit
                        [/cc_special_unit_sort]
                        # set freeze status for faction if coming from custom campaign scenario
                        # should only be "" or initial here, as yes was already ignored above
                        [if]
                            {VARIABLE_CONDITIONAL this_side.freeze equals initial}
                            [then]
                                {VARIABLE faction[$index].freeze yes}
                            [/then]
                            [else]
                                {CLEAR_VARIABLE faction[$index].freeze}
                            [/else]
                        [/if]
                        # copy faction if key is set
                        [if]
                            {VARIABLE_CONDITIONAL this_side.copy equals yes}
                            [then]
                                {VARIABLE_FROM_GLOBAL SigurdFireDragon_Custom_Campaign id_counter      id_counter    $this_side.side}
                                {VARIABLE_OP id_counter add 1}
                                {VARIABLE copy_index $faction.length}
                                [set_variables]
                                    name=faction[$copy_index]
                                    to_variable=faction[$index]
                                [/set_variables]
                                {VARIABLE faction[$copy_index].id $id_counter}
                                {GLOBAL_VARIABLE SigurdFireDragon_Custom_Campaign id_counter      id_counter    $this_side.side}
                                {CLEAR_VARIABLE id_counter,copy_index}
                            [/then]
                        [/if]
                        # delete faction if key is set
                        [if]
                            {VARIABLE_CONDITIONAL this_side.delete equals yes}
                            [then]
                                {CLEAR_VARIABLE faction[$index]}
                            [/then]
                        [/if]
                        # sort the faction array so it is in alphabetical order
                        [cc_sort_array]
                            name=faction
                            first_key=name
                            second_key=id
                        [/cc_sort_array]
                        # Record changes
                        {GLOBAL_VARIABLE SigurdFireDragon_Custom_Campaign faction         faction       $this_side.side}
                        {CLEAR_VARIABLE index,faction}
                    [/then]
                [/if]
                {CLEAR_VARIABLE side}
            [/do]
        [/foreach]
        {CLEAR_VARIABLE custom_campaign}
    [/event]
[/modification]
